version: '3.9'

services:
  postgres:
    image: postgres:latest
    restart: always
#    env_file:
#      - .env.backend
    environment:
      POSTGRES_USER: 'your_user' # ${POSTGRES_USER}
      POSTGRES_PASSWORD: 'your_password' # ${POSTGRES_PASSWORD}
      POSTGRES_DB: 'your_db' # ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - '5332:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U your_user -d your_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  adminer:
    image: adminer
    restart: always
    ports:
      - '3004:8080'

  backend:
    build:
      context: ./backend
    env_file:
      - .env.backend
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    volumes:
      - ./backend:/app/src
      - /app/node_modules

  frontend:
    build:
      context: ./frontend
    env_file:
      - .env.frontend
    ports:
      - '8000:8000'
    volumes:
      - frontend-dist:/app/dist

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - frontend-dist:/usr/share/nginx/html
    ports:
      - '80:80'
    depends_on:
      - frontend
      - backend

volumes:
  frontend-dist:
  postgres-data: